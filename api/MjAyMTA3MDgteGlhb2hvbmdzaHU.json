{"title":"逆向微信小红书小程序并获得x-sign算法","date":"2021-07-09T12:08:00.000Z","date_formatted":{"ll":"2021年7月9日","L":"2021/07/09","MM-DD":"07-09"},"author":"feilang235","link":"20210708-xiaohongshu","tags":["sign","x-sign","小红书","微信小程序","逆向"],"categories":["技术分享","逆向技术"],"updated":"2021-07-20T12:30:30.418Z","content":"<p>本文介绍了逆向微信小红书小程序 app 并获取小红书的x-sign 加密算法详细过程。</p>\n<p>按照文章的流程一步一步往下走就可以获得详细的加密算法了。</p>\n<p>本文也作为逆向技术分享的第一篇文章，欢迎大家拍砖。</p>\n<p><img src=\"https://cdn.parklu.com/wp-content/uploads/2020/08/IMG_8056.jpg\" alt=\"小红书直播怎么玩？品牌该如何选择主播？ | PARKLU\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<h1 id=\"硬件准备\">硬件准备<a title=\"#硬件准备\" href=\"#硬件准备\"></a></h1>\n<p>一台 root 好的手机</p>\n<p>Mac or win 电脑</p>\n<h1 id=\"提取小程序包\"><strong>提</strong>取小程序包<a title=\"#提取小程序包\" href=\"#提取小程序包\"></a></h1>\n<h2 id=\"清除历史缓存的小程序包\">清除历史缓存的小程序包<a title=\"#清除历史缓存的小程序包\" href=\"#清除历史缓存的小程序包\"></a></h2>\n<p>微信的小程序是在第一次打开的时候就会进行下载一个 wxapkg 的包并且缓存到手机里面。以后再使用的时候就不用下载了，只需要检测有没有更新就行了。我们这边先删除历史中存在的所有缓存文件。</p>\n<p>使用 adb 链接手机进入目录：/data/data/com.tencent.mm/MicroMsg/{user}/appbrand/pkg</p>\n<p>{user} 是自己的 UserID。</p>\n<p>在这个目录下删除所有的后缀为 wxapkg 的包。</p>\n<h1 id=\"微信中打开小程序\">微信中打开小程序<a title=\"#微信中打开小程序\" href=\"#微信中打开小程序\"></a></h1>\n<p>清理所有缓存小程序包之后，重新打开微信，然后搜索小红书APP找到小程序。点击后打开小红书小程序。你会发现这个时候第一次特别慢，因为微信需要重新去下载小红书小程序的包。相当于就是下载app 并安装，但是小程序没有app那么大，而且安装更快。</p>\n<p>等重新打开小程序后，随便点击几下，确认运行正常。</p>\n<p>这个时候在 /data/data/com.tencent.mm/MicroMsg/{user}/appbrand/pkg 查看是否有一个新文件。</p>\n<p><img src=\"http://blog.feilang235.com/(null)-20210714144813401.(null)\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<p>如上截图，多了一个 _-1008161779_39.wxapkg 这个包就是小红书的微信小程序内容了。</p>\n<h2 id=\"提取微信小程序包到电脑\">提取微信小程序包到电脑<a title=\"#提取微信小程序包到电脑\" href=\"#提取微信小程序包到电脑\"></a></h2>\n<p>使用 adb pull进行复制。</p>\n<p>这里有个坑。直接从 /data/data/com.tencent.mm/MicroMsg/{user}/appbrand/pkg/_-1008161779_39.wxapkg 这里复制可能会没有权限。</p>\n<p>可以先把 _-1008161779_39.wxapkg 复制到 /data/local/tmp 路径下。并且</p>\n<p>chmod 777  _-1008161779_39.wxapkg 给予最高权限。</p>\n<p>然后在 adb pull /data/local/tmp/_-1008161779_39.wxapkg ~/projects/</p>\n<p>进行复制。这样就可以将小红书的包下载到 mac 的~/projects/ 文件夹下面了。</p>\n<h1 id=\"反编译小程序包\">反编译小程序包<a title=\"#反编译小程序包\" href=\"#反编译小程序包\"></a></h1>\n<p>上面虽然下载到了小程序的包，不过后缀是 wxapkg 这个还是微信生态圈的内容。需要对这个包进行反编译获得 js 文件。并且可以对其进行调试。</p>\n<p>这里推荐一个神器。上 github 地址。</p>\n<p><a href=\"https://github.com/xuedingmiaojun/wxappUnpacker\">https://github.com/xuedingmiaojun/wxappUnpacker</a></p>\n<p>我们也会用到 wxappUnpacker 进行反编译。github 上面已经有详细的使用教程了。而且还提供了一个</p>\n<h3 id=\"wxappunpacker-配置\">wxappUnpacker 配置<a title=\"#wxappunpacker-配置\" href=\"#wxappunpacker-配置\"></a></h3>\n<p>wxappUnpacker 配置依赖了 nodejs 和 npm 不懂的请自行 google。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/xuedingmiaojun/wxappUnpacker.git</span><br><span class=\"line\"></span><br><span class=\"line\">cd wxappUnpacker</span><br><span class=\"line\">npm install # 安装依赖</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装其他需要的包</span><br><span class=\"line\">npm install esprima</span><br><span class=\"line\">npm install css-tree</span><br><span class=\"line\">npm install cssbeautify</span><br><span class=\"line\">npm install vm2</span><br><span class=\"line\">npm install uglify-es</span><br><span class=\"line\">npm install js-beautify</span><br></pre></td></tr></table></figure>\n<h3 id=\"wxappunpacker-工具说明\">wxappUnpacker 工具说明<a title=\"#wxappunpacker-工具说明\" href=\"#wxappunpacker-工具说明\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node wuConfig.js &lt;files...&gt; </span><br><span class=\"line\"># 将 app-config.json 中的内容拆分到各个文件对应的 .json 和 app.json , 并通过搜索 app-config.json 所在文件夹下的所有文件尝试将 iconData 还原为 iconPath 。</span><br><span class=\"line\"></span><br><span class=\"line\">node wuJs.js &lt;files...&gt; </span><br><span class=\"line\"># 将 app-service.js (或小游戏中的 game.js ) 拆分成一系列原先独立的 javascript 文件，并使用 Uglify-ES 美化，从而尽可能还原编译前的情况。</span><br><span class=\"line\"></span><br><span class=\"line\">node wuWxml.js [-m] &lt;files...&gt; </span><br><span class=\"line\"># 将编译/混合到 page-frame.html ( 或 app-wxss.js ) 中的 wxml 和 wxs 文件还原为独立的、未编译的文件。如果加上-m指令，就会阻止block块自动省略，可能帮助解决一些相关过程的 bug 。**</span><br><span class=\"line\"></span><br><span class=\"line\">node wuWxss.js &lt;dirs...&gt; </span><br><span class=\"line\"># 通过获取文件夹下的 page-frame.html ( 或 app-wxss.js ) 和其他 html 文件的内容，还原出编译前 wxss 文件的内容。</span><br><span class=\"line\">node wuWxapkg.js [-o] [-d] [-s=] &lt;files...&gt; </span><br><span class=\"line\"># 将 wxapkg 文件解包，并将包中上述命令中所提的被编译/混合的文件自动地恢复原状。如果加上-o指令，表示仅解包，不做后续操作。如果加上-d指令，就会保留编译/混合后所生成的新文件，否则会自动删去这些文件。同时，前面命令中的指令也可直接加在这一命令上。而如果需要解压分包，请先解压主包，然后执行node wuWxapkg.js [-d] -s=&lt;subPackages...&gt;，其中Main Dir为主包解压地址。除-d与-s外，这些指令两两共存的后果是未定义的（当然，是不会有危险的）</span><br></pre></td></tr></table></figure>\n<h3 id=\"wxappunpacker-反编译小红书小程序\">wxappUnpacker 反编译小红书小程序<a title=\"#wxappunpacker-反编译小红书小程序\" href=\"#wxappunpacker-反编译小红书小程序\"></a></h3>\n<p>终于到了最激动人心的步骤了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node wuWxapkg.js _-1008161779_39.wxapkg</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://blog.feilang235.com/(null)-20210714144833732.(null)\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"http://blog.feilang235.com/(null)-20210714144846850.(null)\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<p>出现上面的内容就表示反编译成功了。现在已经获得了小红书小程序客户端的全部内容了。</p>\n<p>使用 vscode 打开看看。</p>\n<p><img src=\"http://blog.feilang235.com/(null)-20210714144857814.(null)\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<h1 id=\"逆向小红书小程序x-sign-算法\">逆向小红书小程序x-sign 算法<a title=\"#逆向小红书小程序x-sign-算法\" href=\"#逆向小红书小程序x-sign-算法\"></a></h1>\n<p>通过抓包可以知道小红书小程序使用的是 x-sign 字段进行验证。</p>\n<p>既然我们这里已经获得了完整的客户端代码了。要找到 x-sign 签名算法，那还不件非常简单的事情。直接搜索 x-sign 差不多就定位了。</p>\n<p>这里将签名算法接个图。</p>\n<p><img src=\"http://blog.feilang235.com/(null)-20210714144912278.(null)\" alt=\"img\" loading=\"lazy\" class=\"φbp\"></p>\n<p>简单的说就是</p>\n<p>md5(DEFAULT_SIGN_VERSION + url + queryString + SECRET_KEY)</p>\n<p>详细代码就不编写了。如果需要可以私聊v：feilang235 .</p>\n<p>以上就是最详细的逆向小红书小程序并且获得 x-sign 算法的全流程了。</p>\n<h1 id=\"参考内容\">参考内容<a title=\"#参考内容\" href=\"#参考内容\"></a></h1>\n<p><a href=\"https://www.ddosi.com/weixin-pkg/\">https://www.ddosi.com/weixin-pkg/</a></p>\n<p><a href=\"https://github.com/xuedingmiaojun/wxappUnpacker\">https://github.com/xuedingmiaojun/wxappUnpacker</a></p>\n<h1 id=\"免责声明\">免责声明<a title=\"#免责声明\" href=\"#免责声明\"></a></h1>\n<p>以下内容仅用于逆向学习和技术验证，如果侵犯了利益，请联系我删除v:feilang235。</p>\n","prev":{"title":"Mac ADB 使用指南","link":"20210714macadb"},"next":{"title":"Github Actions自动化部署实践Hexo博客","link":"20210708hexoblog"},"plink":"http://feilang235.com/20210708-xiaohongshu/","toc":[{"id":"硬件准备","title":"硬件准备","index":"1"},{"id":"提取小程序包","title":"提取小程序包","index":"2","children":[{"id":"清除历史缓存的小程序包","title":"清除历史缓存的小程序包","index":"2.1"}]},{"id":"微信中打开小程序","title":"微信中打开小程序","index":"3","children":[{"id":"提取微信小程序包到电脑","title":"提取微信小程序包到电脑","index":"3.1"}]},{"id":"反编译小程序包","title":"反编译小程序包","index":"4","children":[{"id":"wxappunpacker-配置","title":"wxappUnpacker 配置","index":"4.1"},{"id":"wxappunpacker-工具说明","title":"wxappUnpacker 工具说明","index":"4.2"},{"id":"wxappunpacker-反编译小红书小程序","title":"wxappUnpacker 反编译小红书小程序","index":"4.3"}]}],"copyright":{"author":"feilang235","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2021年7月9日"},"reading_time":"1497 字约 10 分钟"}